import net.darkhax.curseforgegradle.TaskPublishCurseForge

buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
        maven { url = 'https://maven.parchmentmc.org' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '6+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'

    }
}
plugins {
    id 'net.darkhax.curseforgegradle' version '1.0.11'
}
apply plugin: 'java'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'maven-publish'
apply plugin: 'org.parchmentmc.librarian.forgegradle'

archivesBaseName = "${mod_name}-forge-${minecraft_version}"

minecraft {
    mappings channel: 'official', version: minecraft_version
//    mappings channel: 'parchment', version: '1.18.2-2022.06.5-1.19'

    if (project.hasProperty('forge_ats_enabled') && project.findProperty('forge_ats_enabled').toBoolean()) {
        // This location is hardcoded in Forge and can not be changed.
        // https://github.com/MinecraftForge/MinecraftForge/blob/be1698bb1554f9c8fa2f58e32b9ab70bc4385e60/fmlloader/src/main/java/net/minecraftforge/fml/loading/moddiscovery/ModFile.java#L123
        accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
        project.logger.debug('Forge Access Transformers are enabled for this project.')
    }

    runs {
        client {
            workingDirectory project.file('run')
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName 'Client'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                modClientRun {
                    source sourceSets.main
                    source project(":Common").sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName 'Server'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                modServerRun {
                    source sourceSets.main
                    source project(":Common").sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            ideaModule "${rootProject.name}.${project.name}.main"
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            taskName 'Data'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                modDataRun {
                    source sourceSets.main
                    source project(":Common").sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources.srcDir 'src/generated/resources'

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    compileOnly project(":Common")
    //maty's portection mod compat
    compileOnly fg.deobf("curse.maven:sectionprotection-624049:3983626")
}

repositories { //all of these are for adding crates compat
    mavenLocal()
    maven {
        name = 'Curse Maven'
        url = 'https://cursemaven.com'
        content {
            includeGroup 'curse.maven'
        }
    }
    maven { url 'https://maven.blamejared.com' } //botania
    maven {
        url = "https://maven.theillusivec4.top/"
    }
}

tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    from project(":Common").sourceSets.main.resources
}


jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}
task publishCurseForge(type: TaskPublishCurseForge) {
    dependsOn(tasks.build)
    apiToken = findProperty('cf_api_token');
    // The main file to upload
    def mainFile = upload(630726, jar)
    mainFile.releaseType = "${releasetype}"
    mainFile.changelog = "${changelog}"
    mainFile.changelogType = 'markdown'
    mainFile.addGameVersion("${ minecraft_version}")
    mainFile.addJavaVersion('Java 17')
    mainFile.addModLoader('neoforge')
    mainFile.addModLoader('forge')
    mainFile.addOptional('sectionprotection')
    mainFile.addOptional('byg-crates')
    mainFile.addOptional('plenty-crates')
    mainFile.addOptional('dynamic-crates')
    mainFile.addOptional('botanical-crates')
    mainFile.addOptional('malumian-crates')
    mainFile.addOptional('premium-crates')
    mainFile.addOptional('fruit-crates')
    mainFile.addOptional('enlightened-crates')
    mainFile.addOptional('solar-crates')
    mainFile.addOptional('construct-crates')
    mainFile.addOptional('forbidden-crates')
    mainFile.addOptional('firma-crates')

}
